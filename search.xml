<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>学习笔记</title>
    <url>/2024/04/29/Pandas/Numpy%E5%88%9D%E6%AD%A5%E8%AE%A4%E8%AF%86/</url>
    <content><![CDATA[<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;用于测试初步的Numpy代码, 了解特性</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="comment"># 使用一个列表构造一个一维数组</span></span><br><span class="line">array1 = np.array([<span class="number">1</span>, <span class="number">2</span>, <span class="number">20.</span>])</span><br><span class="line"><span class="comment"># 使用嵌套列表构造一个二维数组</span></span><br><span class="line">array2 = np.array([[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]])</span><br><span class="line"><span class="comment"># 对一个标量和一个Numpy数组求和, 那么Numpy会执行按元素的操作</span></span><br><span class="line"><span class="comment"># 好处是不需要亲自遍历, 这种特性称为 向量化</span></span><br><span class="line"><span class="built_in">print</span>(array1 + <span class="number">1</span>)</span><br><span class="line"><span class="built_in">print</span>(array2 + <span class="number">1</span>)</span><br><span class="line"><span class="comment"># 处理两个Numpy数组的时, 也会遵循这个规则</span></span><br><span class="line"><span class="built_in">print</span>(array1 + array1)</span><br><span class="line"><span class="built_in">print</span>(array2 + array2)</span><br><span class="line"><span class="comment"># 算术运算中使用了不对等行的数组, Numpy会自动将较小的数组扩展成较大的数组的形状, 这种特性称为 广播</span></span><br><span class="line"><span class="built_in">print</span>(array1 + array2)</span><br><span class="line"><span class="comment"># 结果为: [[ 2.  4. 23.],[ 5.  7. 26.]]</span></span><br><span class="line"><span class="comment"># 如果预算中使用了不对等列的数组, 则会出现广播错误</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">print(np.array([2, 4]) + array2)</span></span><br><span class="line"><span class="string"># operands could not be broadcast together with shapes (2,) (2,3)</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 通用函数,对Numpy数组中的每个元素执行操作</span></span><br><span class="line"><span class="built_in">print</span>(np.sqrt(array2))</span><br><span class="line"><span class="built_in">print</span>(array2.<span class="built_in">sum</span>(axis=<span class="number">0</span>))</span><br><span class="line"><span class="built_in">print</span>(array2.<span class="built_in">sum</span>(axis=<span class="number">1</span>)) </span><br><span class="line"></span><br><span class="line"><span class="comment"># 对Numpy数组进行的切片操作</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;对Numpy数组进行的切片操作&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(array2[:, <span class="number">1</span>], <span class="string">&quot;\n&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(array2[:, :], <span class="string">&quot;\n&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(array2[<span class="number">1</span>:, <span class="number">1</span>:], <span class="string">&quot;\n&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(array2[:<span class="number">2</span>, :<span class="number">1</span>], <span class="string">&quot;\n&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 方便的数组构造器</span></span><br><span class="line">array4 = np.arange(<span class="number">15</span>).reshape(<span class="number">3</span>, <span class="number">5</span>)</span><br><span class="line"><span class="built_in">print</span>(array4)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Numpy数组的视图和副本区别</span></span><br><span class="line">array4_view = array4[:, :<span class="number">3</span>]</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;视图的数组&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(array4_view)</span><br><span class="line">array4_view[<span class="number">0</span>, <span class="number">0</span>] = <span class="number">1000</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;视图的数组&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(array4_view)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;原数组&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(array4)</span><br><span class="line"><span class="comment"># 对数组的切片操作的返回对象是一个视图, 对视图的操作会影响原数组</span></span><br><span class="line"><span class="comment"># 如果不想影响原数组的情况下进行切片操作</span></span><br><span class="line">array4_subset = array4[:, :<span class="number">3</span>].copy()</span><br><span class="line">array4_subset[<span class="number">0</span>, <span class="number">0</span>] = <span class="number">500</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;对切片拷贝&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(array4_subset)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;原数组&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(array4)</span><br></pre></td></tr></table></figure>

<blockquote>
<p>结果如下</p>
<p>[ 2.  3. 21.]<br>[[2 3 4]<br> [5 6 7]]<br>[ 2.  4. 40.]<br>[[ 2  4  6]<br> [ 8 10 12]]<br>[[ 2.  4. 23.]<br> [ 5.  7. 26.]]<br>[[1.         1.41421356 1.73205081]<br> [2.         2.23606798 2.44948974]]<br>[5 7 9]<br>[ 6 15]<br>对Numpy数组进行的切片操作<br>[2 5]</p>
<p>[[1 2 3]<br> [4 5 6]]</p>
<p>[[5 6]]</p>
<p>[[1]<br> [4]]</p>
<p>[[ 0  1  2  3  4]<br> [ 5  6  7  8  9]<br> [10 11 12 13 14]]<br>视图的数组<br>[[ 0  1  2]<br> [ 5  6  7]<br> [10 11 12]]<br>视图的数组<br>[[1000    1    2]<br> [   5    6    7]<br> [  10   11   12]]<br>原数组<br>[[1000    1    2    3    4]<br> [   5    6    7    8    9]<br> [  10   11   12   13   14]]<br>对切片拷贝<br>[[500   1   2]<br> [  5   6   7]<br> [ 10  11  12]]<br>原数组<br>[[1000    1    2    3    4]<br> [   5    6    7    8    9]<br> [  10   11   12   13   14]]</p>
</blockquote>
]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Pandas</tag>
        <tag>Numpy</tag>
      </tags>
  </entry>
  <entry>
    <title>学习笔记</title>
    <url>/2024/04/29/Pandas/Pandas%E5%88%9D%E6%AD%A5%E8%AE%A4%E8%AF%86/</url>
    <content><![CDATA[<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;初步认识pandas数据结构和特性</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="comment"># 创建一个DF数据, 还需要提供列参数和index参数</span></span><br><span class="line">data = [[<span class="string">&quot;李&quot;</span>, <span class="number">27</span>, <span class="number">89</span>],</span><br><span class="line">        [<span class="string">&quot;王&quot;</span>, <span class="number">48</span>, <span class="number">95</span>],</span><br><span class="line">        [<span class="string">&quot;高&quot;</span>, <span class="number">44</span>, <span class="number">100</span>]]</span><br><span class="line">df = pd.DataFrame(data=data, columns=[<span class="string">&quot;名字&quot;</span>, <span class="string">&quot;年龄&quot;</span>, <span class="string">&quot;分数&quot;</span>], index=[<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>])</span><br><span class="line"><span class="built_in">print</span>(df)</span><br><span class="line"><span class="built_in">print</span>(df.info())</span><br><span class="line"><span class="comment"># 应该给索引取个名字</span></span><br><span class="line">df.index.name = <span class="string">&quot;班级学生&quot;</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;对索引修改名字之后&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(df)</span><br><span class="line"><span class="comment"># 要将索引还原成普通列</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;将索引重置后&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(df.reset_index())</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;-&quot;</span>*<span class="number">50</span>)</span><br><span class="line"><span class="comment"># 将名字设置为索引</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;没有重置索引的情况&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(df.set_index(<span class="string">&quot;名字&quot;</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;-&quot;</span>*<span class="number">50</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;重置了索引的情况&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(df.reset_index().set_index(<span class="string">&quot;名字&quot;</span>))</span><br><span class="line"><span class="comment"># DF的方法返回的是一个副本</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;-&quot;</span>*<span class="number">50</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;重置后的DF数据集&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(df.reset_index())</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;-&quot;</span>*<span class="number">50</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;原来的数据集&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(df)</span><br><span class="line"><span class="comment"># 数据选取, 通过标签选取数据</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;-&quot;</span>*<span class="number">50</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;注意数据集切片的开闭区间&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(df.loc[<span class="number">1</span>:<span class="number">2</span>, <span class="string">&quot;名字&quot;</span>])</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;-&quot;</span>*<span class="number">50</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;一维数据集series&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(df.loc[:, <span class="string">&quot;分数&quot;</span>])</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;-&quot;</span>*<span class="number">50</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;二维数据集dataframe&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(df.loc[:, [<span class="string">&quot;分数&quot;</span>]])</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;-&quot;</span>*<span class="number">50</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;选择特定列&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(df.loc[:, [<span class="string">&quot;名字&quot;</span>, <span class="string">&quot;分数&quot;</span>, <span class="string">&quot;年龄&quot;</span>]])</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;-&quot;</span>*<span class="number">50</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;选择列区间&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(df.loc[:, <span class="string">&quot;名字&quot;</span>:<span class="string">&quot;年龄&quot;</span>])</span><br><span class="line"><span class="comment"># 通过位置选取数据</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;-&quot;</span>*<span class="number">50</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;注意半开半闭特性&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(df.iloc[<span class="number">1</span>:<span class="number">2</span>, <span class="number">1</span>:<span class="number">2</span>])</span><br><span class="line"><span class="comment"># 通过布尔索引选取数据</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;-&quot;</span>*<span class="number">50</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;筛选表达式的结果只有True或是false&quot;</span>)</span><br><span class="line">tf = (df[<span class="string">&quot;年龄&quot;</span>] &gt; <span class="number">30</span>) &amp; (df[<span class="string">&quot;分数&quot;</span>] &gt; <span class="number">90</span>)</span><br><span class="line"><span class="built_in">print</span>(tf)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;需要loc方法中使用表达式做数据选取&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(df.loc[tf, :])</span><br><span class="line"><span class="comment"># 对索引进行筛选</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;-&quot;</span>*<span class="number">50</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;对索引进行筛选&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(df.loc[df.index &gt;= <span class="number">1</span>, :])</span><br><span class="line"><span class="comment"># 使用isin运算符进行筛选</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;-&quot;</span>*<span class="number">50</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;使用运算符isin进行数据筛选&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(df.loc[df[<span class="string">&quot;名字&quot;</span>].isin([<span class="string">&quot;李&quot;</span>, <span class="string">&quot;高&quot;</span>])])</span><br><span class="line"><span class="comment"># 在DataFrame中只包含数字的时候, 可以不用loc方法下, 直接传递布尔数据集进行筛选</span></span><br><span class="line">rainfall = pd.DataFrame(data=&#123;</span><br><span class="line">        <span class="string">&quot;江西&quot;</span>: [<span class="number">1</span>, <span class="number">3</span>, <span class="number">9</span>],</span><br><span class="line">        <span class="string">&quot;上海&quot;</span>: [<span class="number">4</span>, <span class="number">5</span>, <span class="number">8</span>],</span><br><span class="line">        <span class="string">&quot;深圳&quot;</span>: [<span class="number">23</span>, <span class="number">543</span>, <span class="number">53</span>]</span><br><span class="line">&#125;)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;-&quot;</span>*<span class="number">50</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;直接对数据集判断大小获得布尔值&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(rainfall &gt; <span class="number">100</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;-&quot;</span>*<span class="number">50</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;并直接筛选出来&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(rainfall[rainfall &gt; <span class="number">100</span>])</span><br><span class="line"><span class="comment"># 使用MultiIndex选取数据</span></span><br><span class="line">area = pd.DataFrame(data=&#123;</span><br><span class="line">        <span class="string">&quot;区域&quot;</span>: [<span class="string">&quot;南方&quot;</span>, <span class="string">&quot;南方&quot;</span>, <span class="string">&quot;南方&quot;</span>, <span class="string">&quot;南方&quot;</span>, <span class="string">&quot;北方&quot;</span>, <span class="string">&quot;北方&quot;</span>, <span class="string">&quot;北方&quot;</span>],</span><br><span class="line">        <span class="string">&quot;省份&quot;</span>: [<span class="string">&quot;江西&quot;</span>, <span class="string">&quot;江西&quot;</span>, <span class="string">&quot;广东&quot;</span>, <span class="string">&quot;广东&quot;</span>, <span class="string">&quot;北京&quot;</span>, <span class="string">&quot;北京&quot;</span>, <span class="string">&quot;北京&quot;</span>],</span><br><span class="line">        <span class="string">&quot;人物&quot;</span>: [<span class="string">&quot;李奎&quot;</span>, <span class="string">&quot;陈东&quot;</span>, <span class="string">&quot;高林&quot;</span>, <span class="string">&quot;王杰&quot;</span>, <span class="string">&quot;李嘎&quot;</span>, <span class="string">&quot;高考&quot;</span>, <span class="string">&quot;干了&quot;</span>],</span><br><span class="line">        <span class="string">&quot;年龄&quot;</span>: [<span class="number">56</span>, <span class="number">43</span>, <span class="number">69</span>, <span class="number">20</span>, <span class="number">11</span>, <span class="number">2</span>, <span class="number">4</span>],</span><br><span class="line">        <span class="string">&quot;分数&quot;</span>: [<span class="number">43</span>, <span class="number">534</span>, <span class="number">64</span>, <span class="number">6464</span>, <span class="number">342</span>, <span class="number">34</span>, <span class="number">434</span>]</span><br><span class="line">&#125;)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;-&quot;</span>*<span class="number">50</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;原数据集是&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(area)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;-&quot;</span>*<span class="number">50</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;设置多级索引并使分数从高到底排序&quot;</span>)</span><br><span class="line">area_multi = area.reset_index().set_index([<span class="string">&quot;区域&quot;</span>, <span class="string">&quot;省份&quot;</span>])</span><br><span class="line"><span class="built_in">print</span>(area_multi)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;-&quot;</span>*<span class="number">50</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;选择索引区域&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(area_multi.loc[<span class="string">&quot;南方&quot;</span>, :])</span><br><span class="line"><span class="built_in">print</span>(area_multi.loc[<span class="string">&quot;北方&quot;</span>, :])</span><br><span class="line"><span class="comment"># 复制一份上面的数据, 并对副本数据集修改</span></span><br><span class="line">area_sub = area.copy()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;-&quot;</span>*<span class="number">50</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;一次修改一个值&quot;</span>)</span><br><span class="line">area_sub.loc[<span class="number">1</span>, <span class="string">&quot;人物&quot;</span>] = <span class="string">&quot;高俅&quot;</span></span><br><span class="line"><span class="built_in">print</span>(area_sub)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;-&quot;</span>*<span class="number">50</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;一次修改多个值&quot;</span>)</span><br><span class="line">area_sub.loc[[<span class="number">4</span>, <span class="number">5</span>], <span class="string">&quot;人物&quot;</span>] = [<span class="string">&quot;高进&quot;</span>, <span class="string">&quot;高凤&quot;</span>]</span><br><span class="line"><span class="built_in">print</span>(area_sub)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;-&quot;</span>*<span class="number">50</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;一次修改多个值, 不同列不同行&quot;</span>)</span><br><span class="line">area_sub.loc[[<span class="number">0</span>, <span class="number">5</span>, <span class="number">3</span>], [<span class="string">&quot;人物&quot;</span>, <span class="string">&quot;年龄&quot;</span>]] = [[<span class="string">&quot;高挂&quot;</span>, <span class="number">44</span>], [<span class="string">&quot;王王&quot;</span>, <span class="number">44</span>], [<span class="string">&quot;风干&quot;</span>, <span class="number">44</span>]]</span><br><span class="line"><span class="built_in">print</span>(area_sub)</span><br><span class="line"><span class="comment"># 通过布尔索引设置数据</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;-&quot;</span>*<span class="number">50</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;通过布尔索引设置数据&quot;</span>)</span><br><span class="line">tf1 = (area_sub[<span class="string">&quot;年龄&quot;</span>] &gt; <span class="number">40</span>) &amp; (area_sub[<span class="string">&quot;分数&quot;</span>] &gt; <span class="number">100</span>)</span><br><span class="line"><span class="built_in">print</span>(area_sub.loc[tf1, :])</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;将满足条件的人的名字隐藏&quot;</span>)</span><br><span class="line">area_sub.loc[tf1, <span class="string">&quot;人物&quot;</span>] = <span class="string">&quot;xxx&quot;</span></span><br><span class="line"><span class="built_in">print</span>(area_sub)</span><br><span class="line"><span class="comment"># 将数据集中的某个值全部替换成另一个值</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;-&quot;</span>*<span class="number">50</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;将数据集中的某个值全部替换成另一个值&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(area_sub.replace(<span class="string">&quot;xxx&quot;</span>, <span class="string">&quot;匿名&quot;</span>))</span><br><span class="line"><span class="comment"># 通过添加新列设置数据</span></span><br><span class="line">area_sub.loc[:, <span class="string">&quot;一模&quot;</span>] = [<span class="number">43</span>, <span class="number">54</span>, <span class="number">34</span>, <span class="number">232</span>, <span class="number">55634</span>, <span class="number">564</span>, <span class="number">34</span>]</span><br><span class="line">area_sub.loc[:, <span class="string">&quot;二模&quot;</span>] = [<span class="number">43</span>, <span class="number">54</span>, <span class="literal">None</span>, <span class="number">232</span>, <span class="number">55634</span>, <span class="literal">None</span>, <span class="number">34</span>]</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;-&quot;</span>*<span class="number">50</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;通过添加新列设置数据&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(area_sub)</span><br><span class="line"><span class="comment"># 向量化运算</span></span><br><span class="line">area_sub.loc[:, <span class="string">&quot;出生日期&quot;</span>] = <span class="number">2024</span>-area_sub[<span class="string">&#x27;年龄&#x27;</span>]</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;-&quot;</span>*<span class="number">50</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;通过年龄向量化计算出生日期&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(area_sub)</span><br><span class="line"><span class="comment"># 处理缺失数据</span></span><br><span class="line">area_sub.loc[<span class="number">7</span>, :] = <span class="literal">None</span></span><br><span class="line">nan_data = area_sub.copy()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;-&quot;</span>*<span class="number">50</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;带缺失数据的数据集&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(nan_data)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;-&quot;</span>*<span class="number">50</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;移除所有包含缺失数据的行&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(nan_data.dropna())</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;-&quot;</span>*<span class="number">50</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;移除所有值都缺失的行&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(nan_data.dropna(how=<span class="string">&quot;all&quot;</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;-&quot;</span>*<span class="number">50</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;要想获得一个反映对应位置上是否是NaN的布尔数据集或是系列&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(nan_data.isna())</span><br><span class="line"><span class="comment"># 处理重复数据</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;-&quot;</span>*<span class="number">50</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;drop_duplicates方法, 第一次出现的数据会保留&quot;</span>)</span><br><span class="line">two_data = nan_data.copy()</span><br><span class="line"><span class="built_in">print</span>(two_data.drop_duplicates([<span class="string">&quot;区域&quot;</span>]))</span><br><span class="line"><span class="built_in">print</span>(two_data[<span class="string">&quot;区域&quot;</span>].is_unique)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;-&quot;</span>*<span class="number">50</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;获取去重后的数据&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(two_data[<span class="string">&quot;区域&quot;</span>].unique())</span><br><span class="line"><span class="comment"># duplicated方法是返回一个布尔系列</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;-&quot;</span>*<span class="number">50</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;keep为默认值&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(nan_data[<span class="string">&quot;区域&quot;</span>].duplicated())</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;-&quot;</span>*<span class="number">50</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;keep为false&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(nan_data[<span class="string">&quot;区域&quot;</span>].duplicated(keep=<span class="literal">False</span>))</span><br><span class="line"><span class="built_in">print</span>(nan_data.loc[nan_data[<span class="string">&quot;区域&quot;</span>].duplicated(keep=<span class="literal">False</span>), :])</span><br><span class="line"><span class="comment"># 或是使用 df.index.duplicated(keep=False)</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>结果如下</p>
<p>  名字  年龄   分数<br>0  李  27   89<br>1  王  48   95<br>2  高  44  100<br>&lt;class ‘pandas.core.frame.DataFrame’&gt;<br>Index: 3 entries, 0 to 2<br>Data columns (total 3 columns):</p>
<p>Column  Non-Null Count  Dtype</p>
<hr>
<p> 0   名字      3 non-null      object<br> 1   年龄      3 non-null      int64<br> 2   分数      3 non-null      int64<br>dtypes: int64(2), object(1)<br>memory usage: 96.0+ bytes<br>None<br>对索引修改名字之后<br>     名字  年龄   分数<br>班级学生<br>0     李  27   89<br>1     王  48   95<br>2     高  44  100<br>将索引重置后<br>   班级学生 名字  年龄   分数<br>0     0  李  27   89<br>1     1  王  48   95<br>2     2  高  44  100</p>
<hr>
<p>没有重置索引的情况<br>    年龄   分数<br>名字<br>李   27   89<br>王   48   95<br>高   44  100</p>
<hr>
<p>重置了索引的情况<br>    班级学生  年龄   分数<br>名字<br>李      0  27   89<br>王      1  48   95<br>高      2  44  100</p>
<hr>
<p>重置后的DF数据集<br>   班级学生 名字  年龄   分数<br>0     0  李  27   89<br>1     1  王  48   95<br>2     2  高  44  100</p>
<hr>
<p>原来的数据集<br>     名字  年龄   分数<br>班级学生<br>0     李  27   89<br>1     王  48   95<br>2     高  44  100</p>
<hr>
<p>注意数据集切片的开闭区间<br>班级学生<br>1    王<br>2    高<br>Name: 名字, dtype: object</p>
<hr>
<p>一维数据集series<br>班级学生<br>0     89<br>1     95<br>2    100<br>Name: 分数, dtype: int64</p>
<hr>
<p>二维数据集dataframe<br>       分数<br>班级学生<br>0      89<br>1      95<br>2     100</p>
<hr>
<p>选择特定列<br>     名字   分数  年龄<br>班级学生<br>0     李   89  27<br>1     王   95  48<br>2     高  100  44</p>
<hr>
<p>选择列区间<br>     名字  年龄<br>班级学生<br>0     李  27<br>1     王  48<br>2     高  44</p>
<hr>
<p>注意半开半闭特性<br>      年龄<br>班级学生<br>1     48</p>
<hr>
<p>筛选表达式的结果只有True或是false<br>班级学生<br>0    False<br>1     True<br>2     True<br>dtype: bool<br>需要loc方法中使用表达式做数据选取<br>     名字  年龄   分数<br>班级学生<br>1     王  48   95<br>2     高  44  100</p>
<hr>
<p>对索引进行筛选<br>     名字  年龄   分数<br>班级学生<br>1     王  48   95<br>2     高  44  100</p>
<hr>
<p>使用运算符isin进行数据筛选<br>     名字  年龄   分数<br>班级学生<br>0     李  27   89<br>2     高  44  100</p>
<hr>
<p>直接对数据集判断大小获得布尔值<br>      江西     上海     深圳<br>0  False  False  False<br>1  False  False   True<br>2  False  False  False</p>
<hr>
<p>并直接筛选出来<br>   江西  上海     深圳<br>0 NaN NaN    NaN<br>1 NaN NaN  543.0<br>2 NaN NaN    NaN</p>
<hr>
<p>原数据集是<br>   区域  省份  人物  年龄    分数<br>0  南方  江西  李奎  56    43<br>1  南方  江西  陈东  43   534<br>2  南方  广东  高林  69    64<br>3  南方  广东  王杰  20  6464<br>4  北方  北京  李嘎  11   342<br>5  北方  北京  高考   2    34<br>6  北方  北京  干了   4   434</p>
<hr>
<p>设置多级索引并使分数从高到底排序<br>       index  人物  年龄    分数<br>区域 省份<br>南方 江西      0  李奎  56    43<br>   江西      1  陈东  43   534<br>   广东      2  高林  69    64<br>   广东      3  王杰  20  6464<br>北方 北京      4  李嘎  11   342<br>   北京      5  高考   2    34<br>   北京      6  干了   4   434</p>
<hr>
<p>选择索引区域<br>    index  人物  年龄    分数<br>省份<br>江西      0  李奎  56    43<br>江西      1  陈东  43   534<br>广东      2  高林  69    64<br>广东      3  王杰  20  6464<br>    index  人物  年龄   分数<br>省份<br>北京      4  李嘎  11  342<br>北京      5  高考   2   34<br>北京      6  干了   4  434</p>
<hr>
<p>一次修改一个值<br>   区域  省份  人物  年龄    分数<br>0  南方  江西  李奎  56    43<br>1  南方  江西  高俅  43   534<br>2  南方  广东  高林  69    64<br>3  南方  广东  王杰  20  6464<br>4  北方  北京  李嘎  11   342<br>5  北方  北京  高考   2    34<br>6  北方  北京  干了   4   434</p>
<hr>
<p>一次修改多个值<br>   区域  省份  人物  年龄    分数<br>0  南方  江西  李奎  56    43<br>1  南方  江西  高俅  43   534<br>2  南方  广东  高林  69    64<br>3  南方  广东  王杰  20  6464<br>4  北方  北京  高进  11   342<br>5  北方  北京  高凤   2    34<br>6  北方  北京  干了   4   434</p>
<hr>
<p>一次修改多个值, 不同列不同行<br>   区域  省份  人物  年龄    分数<br>0  南方  江西  高挂  44    43<br>1  南方  江西  高俅  43   534<br>2  南方  广东  高林  69    64<br>3  南方  广东  风干  44  6464<br>4  北方  北京  高进  11   342<br>5  北方  北京  王王  44    34<br>6  北方  北京  干了   4   434</p>
<hr>
<p>通过布尔索引设置数据<br>   区域  省份  人物  年龄    分数<br>1  南方  江西  高俅  43   534<br>3  南方  广东  风干  44  6464<br>将满足条件的人的名字隐藏<br>   区域  省份   人物  年龄    分数<br>0  南方  江西   高挂  44    43<br>1  南方  江西  xxx  43   534<br>2  南方  广东   高林  69    64<br>3  南方  广东  xxx  44  6464<br>4  北方  北京   高进  11   342<br>5  北方  北京   王王  44    34<br>6  北方  北京   干了   4   434</p>
<hr>
<p>将数据集中的某个值全部替换成另一个值<br>   区域  省份  人物  年龄    分数<br>0  南方  江西  高挂  44    43<br>1  南方  江西  匿名  43   534<br>2  南方  广东  高林  69    64<br>3  南方  广东  匿名  44  6464<br>4  北方  北京  高进  11   342<br>5  北方  北京  王王  44    34<br>6  北方  北京  干了   4   434</p>
<hr>
<p>通过添加新列设置数据<br>   区域  省份   人物  年龄    分数     一模       二模<br>0  南方  江西   高挂  44    43     43     43.0<br>1  南方  江西  xxx  43   534     54     54.0<br>2  南方  广东   高林  69    64     34      NaN<br>3  南方  广东  xxx  44  6464    232    232.0<br>4  北方  北京   高进  11   342  55634  55634.0<br>5  北方  北京   王王  44    34    564      NaN<br>6  北方  北京   干了   4   434     34     34.0</p>
<hr>
<p>通过年龄向量化计算出生日期<br>   区域  省份   人物  年龄    分数     一模       二模    出生日期<br>0  南方  江西   高挂  44    43     43     43.0   89056<br>1  南方  江西  xxx  43   534     54     54.0   87032<br>2  南方  广东   高林  69    64     34      NaN  139656<br>3  南方  广东  xxx  44  6464    232    232.0   89056<br>4  北方  北京   高进  11   342  55634  55634.0   22264<br>5  北方  北京   王王  44    34    564      NaN   89056<br>6  北方  北京   干了   4   434     34     34.0    8096</p>
<hr>
<p>带缺失数据的数据集<br>     区域    省份    人物    年龄      分数       一模       二模      出生日期<br>0    南方    江西    高挂  44.0    43.0     43.0     43.0   89056.0<br>1    南方    江西   xxx  43.0   534.0     54.0     54.0   87032.0<br>2    南方    广东    高林  69.0    64.0     34.0      NaN  139656.0<br>3    南方    广东   xxx  44.0  6464.0    232.0    232.0   89056.0<br>4    北方    北京    高进  11.0   342.0  55634.0  55634.0   22264.0<br>5    北方    北京    王王  44.0    34.0    564.0      NaN   89056.0<br>6    北方    北京    干了   4.0   434.0     34.0     34.0    8096.0<br>7  None  None  None   NaN     NaN      NaN      NaN       NaN</p>
<hr>
<p>移除所有包含缺失数据的行<br>   区域  省份   人物    年龄      分数       一模       二模     出生日期<br>0  南方  江西   高挂  44.0    43.0     43.0     43.0  89056.0<br>1  南方  江西  xxx  43.0   534.0     54.0     54.0  87032.0<br>3  南方  广东  xxx  44.0  6464.0    232.0    232.0  89056.0<br>4  北方  北京   高进  11.0   342.0  55634.0  55634.0  22264.0<br>6  北方  北京   干了   4.0   434.0     34.0     34.0   8096.0</p>
<hr>
<p>移除所有值都缺失的行<br>   区域  省份   人物    年龄      分数       一模       二模      出生日期<br>0  南方  江西   高挂  44.0    43.0     43.0     43.0   89056.0<br>1  南方  江西  xxx  43.0   534.0     54.0     54.0   87032.0<br>2  南方  广东   高林  69.0    64.0     34.0      NaN  139656.0<br>3  南方  广东  xxx  44.0  6464.0    232.0    232.0   89056.0<br>4  北方  北京   高进  11.0   342.0  55634.0  55634.0   22264.0<br>5  北方  北京   王王  44.0    34.0    564.0      NaN   89056.0<br>6  北方  北京   干了   4.0   434.0     34.0     34.0    8096.0</p>
<hr>
<p>要想获得一个反映对应位置上是否是NaN的布尔数据集或是系列<br>      区域     省份     人物     年龄     分数     一模     二模   出生日期<br>0  False  False  False  False  False  False  False  False<br>1  False  False  False  False  False  False  False  False<br>2  False  False  False  False  False  False   True  False<br>3  False  False  False  False  False  False  False  False<br>4  False  False  False  False  False  False  False  False<br>5  False  False  False  False  False  False   True  False<br>6  False  False  False  False  False  False  False  False<br>7   True   True   True   True   True   True   True   True</p>
<hr>
<p>drop_duplicates方法, 第一次出现的数据会保留<br>     区域    省份    人物    年龄     分数       一模       二模     出生日期<br>0    南方    江西    高挂  44.0   43.0     43.0     43.0  89056.0<br>4    北方    北京    高进  11.0  342.0  55634.0  55634.0  22264.0<br>7  None  None  None   NaN    NaN      NaN      NaN      NaN<br>False</p>
<hr>
<p>获取去重后的数据<br>[‘南方’ ‘北方’ None]</p>
<hr>
<p>keep为默认值<br>0    False<br>1     True<br>2     True<br>3     True<br>4    False<br>5     True<br>6     True<br>7    False<br>Name: 区域, dtype: bool</p>
<hr>
<p>keep为false<br>0     True<br>1     True<br>2     True<br>3     True<br>4     True<br>5     True<br>6     True<br>7    False<br>Name: 区域, dtype: bool<br>   区域  省份   人物    年龄      分数       一模       二模      出生日期<br>0  南方  江西   高挂  44.0    43.0     43.0     43.0   89056.0<br>1  南方  江西  xxx  43.0   534.0     54.0     54.0   87032.0<br>2  南方  广东   高林  69.0    64.0     34.0      NaN  139656.0<br>3  南方  广东  xxx  44.0  6464.0    232.0    232.0   89056.0<br>4  北方  北京   高进  11.0   342.0  55634.0  55634.0   22264.0<br>5  北方  北京   王王  44.0    34.0    564.0      NaN   89056.0<br>6  北方  北京   干了   4.0   434.0     34.0     34.0    8096.0</p>
</blockquote>
]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Pandas</tag>
        <tag>数据帧</tag>
      </tags>
  </entry>
  <entry>
    <title>日本JCT消费税</title>
    <url>/2024/03/06/Amazon/JCT%E7%9B%B8%E5%85%B3/</url>
    <content><![CDATA[<h1 id="关于日本消费税JCT"><a href="#关于日本消费税JCT" class="headerlink" title="关于日本消费税JCT"></a>关于日本消费税JCT</h1><p><img src="/../../images/image-20240306220426204.png" alt="image-20240306220426204"></p>
<h1 id="注册JCT所需要的资料"><a href="#注册JCT所需要的资料" class="headerlink" title="注册JCT所需要的资料"></a>注册JCT所需要的资料</h1><p><img src="/../../images/image-20240306220513170.png" alt="image-20240306220513170"></p>
<h1 id="JCT注册流程"><a href="#JCT注册流程" class="headerlink" title="JCT注册流程"></a>JCT注册流程</h1><p><img src="/../../images/image-20240306220544732.png" alt="image-20240306220544732"></p>
<h1 id="JCT的缴税对象"><a href="#JCT的缴税对象" class="headerlink" title="JCT的缴税对象"></a>JCT的缴税对象</h1><p><img src="/../../images/image-20240306220620377.png" alt="image-20240306220620377"></p>
<h1 id="日本消费税判定流程图"><a href="#日本消费税判定流程图" class="headerlink" title="日本消费税判定流程图"></a>日本消费税判定流程图</h1><p><img src="/../../images/image-20240306220729048.png" alt="image-20240306220729048"></p>
<h1 id="申告与纳税周期"><a href="#申告与纳税周期" class="headerlink" title="申告与纳税周期"></a>申告与纳税周期</h1><p><img src="/../../images/image-20240306220838029.png" alt="image-20240306220838029"></p>
<h1 id="申报的两种方式"><a href="#申报的两种方式" class="headerlink" title="申报的两种方式"></a>申报的两种方式</h1><p><img src="/../../images/image-20240306220906382.png" alt="image-20240306220906382"></p>
<h2 id="简易申报"><a href="#简易申报" class="headerlink" title="简易申报"></a>简易申报</h2><h3 id="符合简易申报的条件"><a href="#符合简易申报的条件" class="headerlink" title="符合简易申报的条件"></a>符合简易申报的条件</h3><p><img src="/../../images/image-20240306220940083.png" alt="image-20240306220940083"></p>
<h3 id="符合简易申报判定流程图"><a href="#符合简易申报判定流程图" class="headerlink" title="符合简易申报判定流程图"></a>符合简易申报判定流程图</h3><p><img src="/../../images/image-20240306221016746.png" alt="image-20240306221016746"></p>
<h3 id="简易申报的特点"><a href="#简易申报的特点" class="headerlink" title="简易申报的特点"></a>简易申报的特点</h3><p><img src="/../../images/image-20240306221125087.png" alt="image-20240306221125087"></p>
<h3 id="简易申报的抵扣率"><a href="#简易申报的抵扣率" class="headerlink" title="简易申报的抵扣率"></a>简易申报的抵扣率</h3><p><img src="/../../images/image-20240306221205754.png" alt="image-20240306221205754"></p>
<h2 id="标准申报"><a href="#标准申报" class="headerlink" title="标准申报"></a>标准申报</h2><h3 id="抵扣・进口"><a href="#抵扣・进口" class="headerlink" title="抵扣・进口"></a>抵扣・进口</h3><p><img src="/../../images/image-20240306221435484.png" alt="image-20240306221435484"></p>
<h3 id="抵扣・收据"><a href="#抵扣・收据" class="headerlink" title="抵扣・收据"></a>抵扣・收据</h3><p><img src="/../../images/image-20240306221515375.png" alt="image-20240306221515375"></p>
<h1 id="两种申报的税金计算"><a href="#两种申报的税金计算" class="headerlink" title="两种申报的税金计算"></a>两种申报的税金计算</h1><p><img src="/../../images/image-20240306221557861.png" alt="image-20240306221557861"></p>
<h1 id="中间申报"><a href="#中间申报" class="headerlink" title="中间申报"></a>中间申报</h1><p><img src="/../../images/image-20240306221626175.png" alt="image-20240306221626175"></p>
<h1 id="缴税方式"><a href="#缴税方式" class="headerlink" title="缴税方式"></a>缴税方式</h1><p><img src="/../../images/image-20240306221724677.png" alt="image-20240306221724677"></p>
<h1 id="海关事务管理人"><a href="#海关事务管理人" class="headerlink" title="海关事务管理人"></a>海关事务管理人</h1><p><img src="/../../images/image-20240306221827685.png" alt="image-20240306221827685"></p>
<h1 id="JCT和ACP的关联"><a href="#JCT和ACP的关联" class="headerlink" title="JCT和ACP的关联"></a>JCT和ACP的关联</h1><p><img src="/../../images/image-20240306221909096.png" alt="image-20240306221909096"></p>
<p><img src="/../../images/image-20240306221936771.png" alt="image-20240306221936771"></p>
<p><img src="/../../images/image-20240306222003974.png" alt="image-20240306222003974"></p>
<p><img src="/../../images/image-20240306222022567.png" alt="image-20240306222022567"></p>
<p><img src="/../../images/image-20240306222055373.png" alt="image-20240306222055373"></p>
<p><img src="/../../images/image-20240306222113728.png" alt="image-20240306222113728"></p>
]]></content>
      <categories>
        <category>亚马逊</category>
      </categories>
      <tags>
        <tag>JCT</tag>
      </tags>
  </entry>
  <entry>
    <title>亚马逊客服回复模板</title>
    <url>/2024/03/06/Amazon/%E5%AE%A2%E6%9C%8D%E5%9B%9E%E5%A4%8D%E6%A8%A1%E6%9D%BF/</url>
    <content><![CDATA[<h1 id="取消订单"><a href="#取消订单" class="headerlink" title="取消订单"></a>取消订单</h1><h2 id="不良品取消"><a href="#不良品取消" class="headerlink" title="不良品取消"></a>不良品取消</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">いつもお世話になっております。スマホサービスでございます。</span><br><span class="line"></span><br><span class="line">この度は、Yahoo!ショッピングよりご利用いただきまして、誠にありがとうございます。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ご使用に不具合があり、大変ご不快の念をおかけしました。</span><br><span class="line"></span><br><span class="line">誠に申し訳ございませんでした。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">今回のご注文はご返金対応させていただきます。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">今回のご注文はポイントでご購入頂きましたので、</span><br><span class="line"></span><br><span class="line">キャンセル対応させていただきます。</span><br><span class="line"></span><br><span class="line">キャンセルすると、数日内自動的に返還されます。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ご注意：</span><br><span class="line"></span><br><span class="line">当店では、有効期限付きのポイントを使ってご購入された場合のキャンセルにつきまして、</span><br><span class="line"></span><br><span class="line">期限が切れてしまった場合のポイント返還はいかなる場合でも致しかねますので、</span><br><span class="line"></span><br><span class="line">申し訳ございませんが、 </span><br><span class="line">この場合金額相当の商品の交換でご対応致します。 </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">大変ご迷惑おかけしました事を深くお詫び申し上げます。 </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">これ以上ご迷惑をおかけしないようご返品は結構でございます。</span><br><span class="line"></span><br><span class="line">お手数ではございますが、</span><br><span class="line"></span><br><span class="line">そのまま、廃棄お願い申し上げます。</span><br><span class="line"></span><br><span class="line">（問題ある製品の返却ですが、</span><br><span class="line"></span><br><span class="line">別便で返品用封筒をお送りいたします。</span><br><span class="line"></span><br><span class="line">お手数ではございますが、</span><br><span class="line"></span><br><span class="line">その中に最初にお送りした商品を入れてポストに投函していただけましたら幸いです。</span><br><span class="line"></span><br><span class="line">お忙しいところご面倒をお掛けいたしますが、何卒よろしくお願い申し上げます。）</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">これでよろしければもう一度ご連絡いただけましたら幸いでございます。</span><br><span class="line"></span><br><span class="line">何卒宜しくお願い致します。</span><br></pre></td></tr></table></figure>



<h2 id="顾客返品"><a href="#顾客返品" class="headerlink" title="顾客返品"></a>顾客返品</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">お世話になっております。スマホサービスでございます。</span><br><span class="line"></span><br><span class="line">この度は、Yahoo! ショッピングよりご利用いただきまして、誠にありがとうございます。</span><br><span class="line"></span><br><span class="line">ご返品の件は承知致しました。</span><br><span class="line"></span><br><span class="line">今回の場合申し訳ございませんが、</span><br><span class="line"></span><br><span class="line">返品送料はお客様のご負担で以下の住所でお願いいたします。</span><br><span class="line"></span><br><span class="line">-</span><br><span class="line">-</span><br><span class="line">-</span><br><span class="line"></span><br><span class="line">お客様からのご返品は一番安い方法でお送りいただければ結構でございます。</span><br><span class="line"></span><br><span class="line">またご返金についてですが、</span><br><span class="line"></span><br><span class="line">今回のご注文はポイントでご購入頂きましたので、</span><br><span class="line"></span><br><span class="line">キャンセル対応させていただきます。</span><br><span class="line"></span><br><span class="line">キャンセルすると、数日内自動的に返還されます。</span><br><span class="line"></span><br><span class="line">ご注意：</span><br><span class="line"></span><br><span class="line">当店では、有効期限付きのポイントを使ってご購入された場合のキャンセルにつきまして、</span><br><span class="line"></span><br><span class="line">期限が切れてしまった場合のポイント返還はいかなる場合でも致しかねますので、</span><br><span class="line"></span><br><span class="line">申し訳ございませんが、 </span><br><span class="line">この場合金額相当の商品の交換でご対応致します。 </span><br><span class="line"></span><br><span class="line">ご迷惑をおかけして誠に申し訳ございませんでした。</span><br><span class="line"></span><br><span class="line">これでよろしければもう一度ご連絡下さいますようお願いいたします。</span><br><span class="line"></span><br><span class="line">何卒宜しくお願い致します。</span><br></pre></td></tr></table></figure>



<h1 id="产品问题"><a href="#产品问题" class="headerlink" title="产品问题"></a>产品问题</h1><h2 id="没有库存问换色返金"><a href="#没有库存问换色返金" class="headerlink" title="没有库存问换色返金"></a>没有库存问换色返金</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">お世話になっております。スマホサービスでございます。</span><br><span class="line">この度は、楽天市場よりご利用いただきまして、誠にありがとうございます。</span><br><span class="line"></span><br><span class="line">ご使用に不具合があり、大変ご不快の念をおかけしました。</span><br><span class="line">誠に申し訳ございませんでした。</span><br><span class="line"></span><br><span class="line">早速、新しい商品を再送させていただきたいと思っておりますが</span><br><span class="line">あいにくご注文の商品が在庫が切れましたため、一時出荷できない状態でございます。</span><br><span class="line"></span><br><span class="line">もしカラーに拘りのない場合、、ブルーにご変更していただければすぐに出荷できますが</span><br><span class="line">いかがでしょうか？</span><br><span class="line"></span><br><span class="line">もちろんキャンセル、返金も承りますのでご安心くださいませ。</span><br><span class="line"></span><br><span class="line">最初に送った不良の商品ですが、</span><br><span class="line">これ以上ご迷惑をおかけしないようご返品は結構でございます。</span><br><span class="line">そのまま、廃棄お願い申し上げます。</span><br><span class="line"></span><br><span class="line">検品チェックには十分注意を払っているのですが、</span><br><span class="line">結果的にこのような事態を招いてしまい、ご迷惑をおかけ</span><br><span class="line">しましたこと、心よりお詫び申し上げます。</span><br><span class="line"></span><br><span class="line">今後は検品体制をより一層強化し、</span><br><span class="line">社員一同、気を引き締めて業務に望む所存ですので、</span><br><span class="line">何卒、ご容赦くださいますよう、お願い申し上げます。</span><br><span class="line"></span><br><span class="line">色をご変更するかキャンセルをするかをお教えいただけないでしょうか？</span><br><span class="line">お返事をお待ちしております。</span><br><span class="line">宜しくお願いたします！</span><br></pre></td></tr></table></figure>

<h2 id="不良品-交换或是返金"><a href="#不良品-交换或是返金" class="headerlink" title="不良品(交换或是返金)"></a>不良品(交换或是返金)</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">様</span><br><span class="line"></span><br><span class="line">いつもお世話になっております。XXXでございます。</span><br><span class="line"></span><br><span class="line">この度は、Yahoo!ショッピングよりご利用いただきまして、誠にありがとうございます。</span><br><span class="line"></span><br><span class="line">ご使用に不具合があり、大変ご不快の念をおかけしました。</span><br><span class="line">誠に申し訳ございませんでした。</span><br><span class="line"></span><br><span class="line">土日お休みをいただいておりましたため、</span><br><span class="line">返信が遅くなり、大変申し訳ございませんでした。</span><br><span class="line"></span><br><span class="line">申し訳ございませんが、</span><br><span class="line">担当者に不良状況を報告させていただきたいと思っておりますが、</span><br><span class="line">お送りした商品は充電できますでしょうか？</span><br><span class="line"></span><br><span class="line">ご注文いただいた商品は３ヶ月保証の対象となっておりますので、</span><br><span class="line">もし不良品を送付しましたら、</span><br><span class="line">大変恐れ入りますが、</span><br><span class="line">新しい商品と無償で交換させていただきたいと思っておりますが、</span><br><span class="line">よろしいでしょうか？</span><br><span class="line"></span><br><span class="line">もし交換不要でしたら、</span><br><span class="line">ご返品返金対応でも問題ございません。</span><br><span class="line"></span><br><span class="line">ご迷惑をおかけしましたこと、心よりお詫び申し上げます。</span><br><span class="line"></span><br><span class="line">もう一度ご連絡頂けましたら幸いでございます。</span><br><span class="line">何卒よろしくお願いいたします。</span><br></pre></td></tr></table></figure>

<h1 id="要求客户改评论"><a href="#要求客户改评论" class="headerlink" title="要求客户改评论"></a>要求客户改评论</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">いつもお世話になっております。XXXでございます。</span><br><span class="line">このたび、当店をご利用いただきまして誠にありがとうございます。</span><br><span class="line"></span><br><span class="line">レビューを拝見させていただきご連絡いたしました。</span><br><span class="line"></span><br><span class="line">せっかく商品をお選び頂きましたのに</span><br><span class="line">ご使用に不具合があり、大変ご不快の念をおかけしました。</span><br><span class="line">誠に申し訳ございませんでした。</span><br><span class="line"></span><br><span class="line">お客様のご満足は弊社にとって最も重要なこととなっております。</span><br><span class="line">積極的に対応させていただきたいと思っております。</span><br><span class="line"></span><br><span class="line">大変すみませんが、こちらの商品はそちらの商品本体に合わないということでしょうか？</span><br><span class="line"></span><br><span class="line">先程確認したところ、そちらは４月３日にMicroケーブルをご注文いただきましたが、</span><br><span class="line"></span><br><span class="line">もしよければ、そちらのスマホの機種を教えていただけんか？</span><br><span class="line"></span><br><span class="line">今まで販売した製品でこの問題があったことは始めたので、</span><br><span class="line">もしかして不具合があった製品を送ったかも知りません。</span><br><span class="line"></span><br><span class="line">もし不良品ならば、こちらは新しい商品を無償にご再送させていただきます。</span><br><span class="line"></span><br><span class="line">もし無理なら、キャンセル返金も対応可能ですが、いかがですか？</span><br><span class="line"></span><br><span class="line">今回のご注文はポイントでご購入頂きましたので、</span><br><span class="line">キャンセルすると、数日内自動的に返還されます。</span><br><span class="line"></span><br><span class="line">ご注意：</span><br><span class="line">当店では、有効期限付きのポイントを使ってご購入された場合のキャンセルにつきまして、</span><br><span class="line">期限が切れてしまった場合のポイント返還はいかなる場合でも致しかねますので、</span><br><span class="line">申し訳ございませんが、 この場合金額相当の商品の交換でご対応致します。  </span><br><span class="line">    </span><br><span class="line">大変ご迷惑おかけしました事を深くお詫び申し上げます。</span><br><span class="line"></span><br><span class="line">商品に関して何か些細なことでも結構でございます。</span><br><span class="line"></span><br><span class="line">これからご不便などを感じられた際は、メールか電話でご連絡いただければ幸いです。</span><br><span class="line"></span><br><span class="line">では、ご返事をお待ちしております。</span><br></pre></td></tr></table></figure>

<h1 id="感谢客户评价"><a href="#感谢客户评价" class="headerlink" title="感谢客户评价"></a>感谢客户评价</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">お客様の評価は最も大事となって、貴重なご意見として、</span><br><span class="line">今後の業務改善の参考とさせていただきたいと思っております。</span><br><span class="line"></span><br><span class="line">今後もお客様のワクワクに貢献できるように頑張ります。</span><br><span class="line"></span><br><span class="line">レビューいただければ幸いと存じます。</span><br><span class="line">どうもありがとうございます。</span><br><span class="line"></span><br><span class="line">今後も、どんどん新しい製品、良い製品を仕入れて販売してまいります。</span><br><span class="line">また是非ご利用くださいましたら幸いでございます。</span><br><span class="line"></span><br><span class="line">今後とも何卒宜しくお願い申し上げます。</span><br></pre></td></tr></table></figure>



<h1 id="给客户道歉"><a href="#给客户道歉" class="headerlink" title="给客户道歉"></a>给客户道歉</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1. </span><br><span class="line">この度はご対応に不手際があり大変申し訳ございませんでした。</span><br><span class="line">ご対応につきまして、よりお客様に寄り添ったご対応ができるよう</span><br><span class="line">今後においても指導を徹底いたします。</span><br><span class="line">お客様におかれましては、率直なご意見をいただきありがとうございました。</span><br><span class="line">お客様と同じような思いをさせないためにも努力してまいります。</span><br><span class="line"></span><br><span class="line">どうもありがとうございました。</span><br><span class="line"></span><br><span class="line">2.</span><br><span class="line">このようなことを繰り返さないように、以後、気をつけます。</span><br><span class="line">何卒ご容赦くださいますようお願い申し上げます。</span><br></pre></td></tr></table></figure>

<h1 id="向客户确认机型"><a href="#向客户确认机型" class="headerlink" title="向客户确认机型"></a>向客户确认机型</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">またメーカーにご使用不可の原因を確認させていただき</span><br><span class="line">品質向上に向け改善させていただきたいと思っておりますので、</span><br><span class="line">お持ちのスマホ型番をお知らせいただけましたら幸いでございます。</span><br></pre></td></tr></table></figure>

<h1 id="新年问候语"><a href="#新年问候语" class="headerlink" title="新年问候语"></a>新年问候语</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">明けましておめでとうございます、XXXでございます。</span><br><span class="line">昨年大変お世話になりました、本年もよろしくお願いいたします。</span><br></pre></td></tr></table></figure>

<h1 id="配件漏发"><a href="#配件漏发" class="headerlink" title="配件漏发"></a>配件漏发</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">お世話になっております。XXXでございます。</span><br><span class="line">この度はご注文いただきありがとうございました。</span><br><span class="line"></span><br><span class="line">発送漏れにつきましてご不便をおかけして申し訳ございません。</span><br><span class="line">早速残りの商品を別便で再送させていただきます。</span><br><span class="line"></span><br><span class="line">配送チェックには十分注意を払っているのですが、</span><br><span class="line">結果的にこのような事態を招いてしまい、</span><br><span class="line">大変ご迷惑をおかけしてしまいましたこと、心よりお詫び申し上げます。</span><br><span class="line"></span><br><span class="line">商品到着まで少々お待ちくださいますようお願い申し上げます。</span><br><span class="line"></span><br><span class="line">今後は配送体制をより一層強化し、</span><br><span class="line">スタッフ一同、気を引き締めて業務に望む所存ですので、</span><br><span class="line">何卒、ご容赦くださいますよう、お願い申し上げます。</span><br><span class="line"></span><br><span class="line">また何か不明点がございましたら、お気軽にご連絡ください。</span><br><span class="line"></span><br><span class="line">今後とも、引き続きご愛顧下さいますようお願い申し上げます。</span><br></pre></td></tr></table></figure>

<h1 id="确认不良产品问题点"><a href="#确认不良产品问题点" class="headerlink" title="确认不良产品问题点"></a>确认不良产品问题点</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">お世話になっております。XXXでございます。</span><br><span class="line">この度は、楽天市場よりご利用いただきまして、誠にありがとうございます。</span><br><span class="line"></span><br><span class="line">不具合があった製品を送ってしまい誠に申し訳ございませんでした。</span><br><span class="line"></span><br><span class="line">大変恐縮ですが、もし可能であれば、</span><br><span class="line">不良の状況を録画し下記のメールアドレスに送っていただけないのでしょうか。</span><br><span class="line">---</span><br><span class="line">メーカーに報告し、品質向上に向け改善させて頂ければと存じます。</span><br><span class="line">何卒宜しくお願い申し上げます。</span><br><span class="line"></span><br><span class="line">検品チェックには十分注意を払っているのですが、</span><br><span class="line">結果的にこのような事態を招いてしまい、ご迷惑をおかけ</span><br><span class="line">しましたこと、心よりお詫び申し上げます。</span><br><span class="line"> </span><br><span class="line">以後、このようなこと無き様尽力して参りますので、</span><br><span class="line">何卒ご容赦くださいますようお願い申し上げます。</span><br><span class="line"></span><br><span class="line">今回本当に申し訳ございませんでした。</span><br><span class="line">何卒宜しくお願い申し上げます。</span><br></pre></td></tr></table></figure>

<h1 id="客户下单错误"><a href="#客户下单错误" class="headerlink" title="客户下单错误"></a>客户下单错误</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">いつもお世話になっております、XXXの橘でございます。</span><br><span class="line">ご連絡頂きありがとうございます。</span><br><span class="line">先程、注文を確認まりました。</span><br><span class="line">顧客様が注文したのは40mmでございます。</span><br><span class="line">添付にて明細をご確認してお願い致します。</span><br><span class="line"></span><br><span class="line">商品交換のことは対応出来ますが、</span><br><span class="line">一点だけお願いがございますが、</span><br><span class="line">返品と再送の往復送料はお客様負担でお願いいたします。</span><br><span class="line"></span><br><span class="line">こちらから着払いでお送りすると送料が高額になってしまいますため、</span><br><span class="line">こちらから一番お安い方法で発送致します。</span><br><span class="line">ご返品の際に300円分の切手を同封していただければと思います。</span><br><span class="line"></span><br><span class="line">お客様からのご返品は一番安い方法でお送りいただければ結構でございます。</span><br><span class="line">郵便局で定形外普通郵便で送っていただくのが一番お安いかと思います。</span><br><span class="line"></span><br><span class="line">ご返品は、下記住所でお願いいたします。</span><br><span class="line">-</span><br><span class="line">-</span><br><span class="line">-</span><br><span class="line"></span><br><span class="line">お手数をおかけして申し訳ございませんが、</span><br><span class="line">もしこれでよろしいければ、ご連絡をいただきますようお願い致します。</span><br><span class="line">何卒宜しくお願い申し上げます。</span><br></pre></td></tr></table></figure>

<h1 id="贴膜步骤"><a href="#贴膜步骤" class="headerlink" title="贴膜步骤"></a>贴膜步骤</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1.アルコール綿でスマホの画面に不着した汚れをふき取ります。</span><br><span class="line">2.クリーニングクロスで汚れと残ったアルコール分を抜き取ります。</span><br><span class="line">3.ホコリ除去シールで液晶部分に残ったホコリを取りぬきます。</span><br><span class="line">4．液晶部分にホコリがないことを確認します。</span><br><span class="line">5.フィルム裏面の剥離シールを剥がしてスマホの角部分を合わせて貼り付けます。</span><br></pre></td></tr></table></figure>

<h1 id="与壳不兼容"><a href="#与壳不兼容" class="headerlink" title="与壳不兼容"></a>与壳不兼容</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">この度はご購入頂きましてありがとうございます。</span><br><span class="line">ご使用に不具合があり、ご迷惑をおかけしまして大変申し訳ございません。</span><br><span class="line">今回の件につきましては、もしかして本商品はお客様のご使用の携帯カバーと干渉で不良が出たかもしれないです。</span><br><span class="line">もちろん初期不良の可能性もございますので、今回の場合は商品交換かご返金が可能でございます。</span><br><span class="line">別途でメール連絡させていただきます。</span><br><span class="line">ご確認いただければと思います。</span><br><span class="line">何卒よろしくお願いいたします。</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>亚马逊</category>
      </categories>
      <tags>
        <tag>客服回复</tag>
        <tag>待优化</tag>
      </tags>
  </entry>
  <entry>
    <title>学习笔记</title>
    <url>/2024/03/08/Pandas/Pandas%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<ol>
<li>Pandas所有数据结构的值都是可变的, 但数据结构的大小并非都是可变的, 比如, <strong>series的长度不可改变</strong>, 但DataFrame里就可以插入列</li>
<li>Pandas里, 绝大多数方法都不改变原始的输入数据, 而是赋值数据, 生成新的对象. 一般来说, <strong>原始输入数据不变更稳妥</strong></li>
<li>官方调用包语句. [import pandas as pd], [import numpy as np]</li>
<li></li>
</ol>
]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Pandas</tag>
        <tag>待补充</tag>
      </tags>
  </entry>
  <entry>
    <title>学习笔记</title>
    <url>/2024/04/29/Pandas/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%B0%8F%E7%BB%86%E8%8A%82/</url>
    <content><![CDATA[<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 字典的get方法访问存在的键和不存在的键</span></span><br><span class="line">dict1 = &#123;<span class="number">1</span>: <span class="string">&quot;us&quot;</span>, <span class="number">2</span>: <span class="string">&quot;ERU&quot;</span>, <span class="number">3</span>: <span class="string">&quot;JP&quot;</span>&#125;</span><br><span class="line"><span class="built_in">print</span>(dict1[<span class="number">1</span>])</span><br><span class="line"><span class="built_in">print</span>(dict1.get(<span class="number">1</span>, <span class="string">&quot;NA&quot;</span>))</span><br><span class="line"><span class="built_in">print</span>(dict1.get(<span class="number">100</span>, <span class="string">&quot;fdas&quot;</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 字典解包和合并</span></span><br><span class="line">dict1 = &#123;<span class="number">1</span>: <span class="string">&quot;us&quot;</span>, <span class="number">2</span>: <span class="string">&quot;ERU&quot;</span>, <span class="number">3</span>: <span class="string">&quot;JP&quot;</span>&#125;</span><br><span class="line">dict2 = &#123;<span class="string">&quot;国家&quot;</span>: <span class="string">&quot;中国&quot;</span>&#125;</span><br><span class="line"><span class="comment"># 解包之后</span></span><br><span class="line"><span class="built_in">print</span>(&#123;**dict2&#125;)</span><br><span class="line"><span class="comment"># 结果为: &#123;&#x27;国家&#x27;: &#x27;中国&#x27;&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 解包合并第一种方法</span></span><br><span class="line"><span class="built_in">print</span>(&#123;**dict1, **dict2&#125;)</span><br><span class="line"><span class="comment"># 结果为: &#123;1: &#x27;us&#x27;, 2: &#x27;ERU&#x27;, 3: &#x27;JP&#x27;, &#x27;国家&#x27;: &#x27;中国&#x27;&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 解包合并第二种方法</span></span><br><span class="line"><span class="built_in">print</span>(dict1 | dict2)</span><br><span class="line"><span class="comment"># 结果为: &#123;1: &#x27;us&#x27;, 2: &#x27;ERU&#x27;, 3: &#x27;JP&#x27;, &#x27;国家&#x27;: &#x27;中国&#x27;&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 集合的交并集演示</span></span><br><span class="line">set1 = &#123;<span class="string">&quot;US&quot;</span>, <span class="string">&quot;EN&quot;</span>, <span class="string">&quot;JP&quot;</span>&#125;</span><br><span class="line">set2 = &#123;<span class="string">&quot;US&quot;</span>, <span class="string">&quot;JP&quot;</span>, <span class="string">&quot;CA&quot;</span>, <span class="string">&quot;CH&quot;</span>&#125;</span><br><span class="line"><span class="built_in">print</span>(set1.union(set2))  <span class="comment"># 并集</span></span><br><span class="line"><span class="built_in">print</span>(set2.intersection(set1))  <span class="comment"># 交集</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 条件表达式或是三元运算符</span></span><br><span class="line">is_important = <span class="literal">True</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;It&#x27;s improtant&quot;</span>) <span class="keyword">if</span> is_important <span class="keyword">else</span> <span class="built_in">print</span>(</span><br><span class="line">    <span class="string">&quot;It&#x27;s not important, so cool, cool&quot;</span>)</span><br></pre></td></tr></table></figure>

<blockquote>
<p>结果如下</p>
<p>us<br>us<br>fdas<br>{‘国家’: ‘中国’}<br>{1: ‘us’, 2: ‘ERU’, 3: ‘JP’, ‘国家’: ‘中国’}<br>{1: ‘us’, 2: ‘ERU’, 3: ‘JP’, ‘国家’: ‘中国’}<br>{‘CA’, ‘CH’, ‘EN’, ‘US’, ‘JP’}<br>{‘JP’, ‘US’}<br>It’s improtant</p>
</blockquote>
]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Pandas</tag>
        <tag>待补充</tag>
      </tags>
  </entry>
  <entry>
    <title>亚马逊优惠券</title>
    <url>/2024/04/01/Amazon/%E4%BC%98%E6%83%A0%E5%88%B8%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<p><img src="/../../images/image-20240401214802167.png" alt="image-20240401214802167"></p>
]]></content>
      <categories>
        <category>亚马逊</category>
      </categories>
      <tags>
        <tag>优惠券</tag>
      </tags>
  </entry>
  <entry>
    <title>Z字形变换</title>
    <url>/2024/03/06/Leecode/20240306/</url>
    <content><![CDATA[<h1 id="题目-Z字形变换"><a href="#题目-Z字形变换" class="headerlink" title="题目-Z字形变换"></a>题目-Z字形变换</h1><p>将一个给定字符串 <code>s</code> 根据给定的行数 <code>numRows</code> ，以从上往下、从左到右进行 Z 字形排列。</p>
<p>比如输入字符串为 <code>&quot;PAYPALISHIRING&quot;</code> 行数为 <code>3</code> 时，排列如下：</p>
<blockquote>
<p>P   A   H   N<br>A P L S I I G<br>Y   I   R</p>
</blockquote>
<p>之后，你的输出需要从左往右逐行读取，产生出一个新的字符串，比如：<code>&quot;PAHNAPLSIIGYIR&quot;</code>。</p>
<p>请你实现这个将字符串进行指定行数变换的函数：</p>
<blockquote>
<p>string convert(string s, int numRows);</p>
</blockquote>
<p><strong>示例 1：</strong></p>
<blockquote>
<p>输入：s &#x3D; “PAYPALISHIRING”, numRows &#x3D; 3<br>输出：”PAHNAPLSIIGYIR”</p>
</blockquote>
<p><strong>示例 2：</strong></p>
<blockquote>
<p>输入：s &#x3D; “PAYPALISHIRING”, numRows &#x3D; 4<br>输出：”PINALSIGYAHRPI”<br>解释：<br>P     I    N<br>A   L S  I G<br>Y A   H R<br>P     I</p>
</blockquote>
<p><strong>示例 3：</strong></p>
<blockquote>
<p>输入：s &#x3D; “A”, numRows &#x3D; 1<br>输出：”A”</p>
</blockquote>
<p><strong>提示：</strong></p>
<ul>
<li><code>1 &lt;= s.length &lt;= 1000</code></li>
<li><code>s</code> 由英文字母（小写和大写）、<code>&#39;,&#39;</code> 和 <code>&#39;.&#39;</code> 组成</li>
<li><code>1 &lt;= numRows &lt;= 1000</code></li>
</ul>
<h1 id="解答答案"><a href="#解答答案" class="headerlink" title="解答答案"></a>解答答案</h1><h2 id="笨方法1"><a href="#笨方法1" class="headerlink" title="笨方法1"></a>笨方法1</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">convert</span>(<span class="params">self, s, numRows</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        :type s: str</span></span><br><span class="line"><span class="string">        :type numRows: int</span></span><br><span class="line"><span class="string">        :rtype: str</span></span><br><span class="line"><span class="string">        想法</span></span><br><span class="line"><span class="string">        1. 读取的中断循环在于字符串字符</span></span><br><span class="line"><span class="string">        2. 采用二维列表循环放入数据</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="comment"># 行数即内列表的个数</span></span><br><span class="line">        result_list = []</span><br><span class="line">        result = <span class="string">&quot;&quot;</span></span><br><span class="line">        result1 = <span class="string">&quot;&quot;</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, numRows+<span class="number">1</span>):</span><br><span class="line">            result_list.append([])</span><br><span class="line">        <span class="built_in">print</span>(result_list)</span><br><span class="line">        <span class="comment"># 确定循环退出条件, 并创建一个指示器</span></span><br><span class="line">        index = <span class="number">1</span></span><br><span class="line">        step = <span class="number">1</span></span><br><span class="line">        <span class="keyword">for</span> singlechar <span class="keyword">in</span> s:</span><br><span class="line">            result_list[index-<span class="number">1</span>].append(singlechar)</span><br><span class="line">            <span class="keyword">if</span> index == numRows:</span><br><span class="line">                step = -<span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> index == <span class="number">1</span>:</span><br><span class="line">                step = <span class="number">1</span></span><br><span class="line">            index += step</span><br><span class="line">        <span class="comment"># 合并列表字符串</span></span><br><span class="line">        <span class="keyword">for</span> singlestr <span class="keyword">in</span> result_list:</span><br><span class="line">            <span class="keyword">for</span> achar <span class="keyword">in</span> singlestr:</span><br><span class="line">                result1 += achar</span><br><span class="line">            result += result1</span><br><span class="line">            result1 = <span class="string">&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    obj = Solution()</span><br><span class="line">    a = obj.convert(<span class="string">&quot;PAYPALISHIRING&quot;</span>, <span class="number">4</span>)</span><br><span class="line">    <span class="built_in">print</span>(a)</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Leecode</category>
      </categories>
      <tags>
        <tag>待优化</tag>
        <tag>Leecode</tag>
      </tags>
  </entry>
  <entry>
    <title>xpath表达式</title>
    <url>/2024/03/12/Python/xpath%E8%A1%A8%E8%BE%BE%E5%BC%8F/</url>
    <content><![CDATA[<h1 id="匹配圆括号里面的所有内容"><a href="#匹配圆括号里面的所有内容" class="headerlink" title="匹配圆括号里面的所有内容"></a>匹配圆括号里面的所有内容</h1><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"><span class="comment"># 假设你有一个包含圆括号的字符串</span></span><br><span class="line">s = <span class="string">&#x27;这是一个(示例)字符串，包含(多个)圆括号。&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用正则表达式匹配圆括号内的内容</span></span><br><span class="line">matches = re.findall(<span class="string">r&#x27;\((.*?)\)&#x27;</span>, s)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 打印所有匹配的内容</span></span><br><span class="line"><span class="keyword">for</span> <span class="keyword">match</span> <span class="keyword">in</span> matches:</span><br><span class="line">    <span class="built_in">print</span>(<span class="keyword">match</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure>



]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>待补充</tag>
        <tag>xpath</tag>
      </tags>
  </entry>
  <entry>
    <title>列表栈实现10进制转16以下进制</title>
    <url>/2024/03/05/Python/%E5%88%97%E8%A1%A8%E6%A0%88%E5%AE%9E%E7%8E%B010%E8%BF%9B%E5%88%B6%E8%BD%AC16%E4%BB%A5%E4%B8%8B%E8%BF%9B%E5%88%B6/</url>
    <content><![CDATA[<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 写函数方法</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">baseconverter</span>(<span class="params">number, base</span>):</span><br><span class="line">    <span class="comment"># 创建字符串用于各进制各个位的字符占位</span></span><br><span class="line">    digits = <span class="string">&quot;0123456789ABCDEF&quot;</span></span><br><span class="line">    remlist = <span class="built_in">list</span>()</span><br><span class="line">    <span class="comment"># 判断输入的数字是否大于0</span></span><br><span class="line">    <span class="keyword">while</span> number &gt; <span class="number">0</span>:</span><br><span class="line">        rem = number % base</span><br><span class="line">        <span class="comment"># 将余数入栈</span></span><br><span class="line">        remlist.append(rem)</span><br><span class="line">        <span class="comment"># 获取当前输入数字的整除数</span></span><br><span class="line">        number = number // base</span><br><span class="line">    <span class="comment"># 对栈中数据退栈处理, 并用一个字符串相连</span></span><br><span class="line">    result = <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">while</span> remlist:</span><br><span class="line">        result = result + digits[remlist.pop()]</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    a = baseconverter(<span class="number">25</span>, <span class="number">2</span>)</span><br><span class="line">    <span class="built_in">print</span>(a)</span><br><span class="line">        </span><br></pre></td></tr></table></figure>

<p>输出结果为:</p>
<blockquote>
<p>11001</p>
</blockquote>
]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>待补充</tag>
        <tag>进制转换</tag>
      </tags>
  </entry>
  <entry>
    <title>CSV转置</title>
    <url>/2024/03/11/PythonProjects/CSV%E8%BD%AC%E7%BD%AE/</url>
    <content><![CDATA[<h1 id="转置为CSV"><a href="#转置为CSV" class="headerlink" title="转置为CSV"></a>转置为CSV</h1>]]></content>
      <categories>
        <category>从零到一做项目</category>
      </categories>
      <tags>
        <tag>待补充</tag>
        <tag>Python</tag>
        <tag>从零到一做项目</tag>
      </tags>
  </entry>
  <entry>
    <title>各国天气数据爬取</title>
    <url>/2024/03/08/PythonProjects/%E5%90%84%E5%9B%BD%E5%A4%A9%E6%B0%94%E6%95%B0%E6%8D%AE%E7%88%AC%E5%8F%96/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>从零到一做项目</category>
      </categories>
      <tags>
        <tag>待补充</tag>
        <tag>Python</tag>
        <tag>从零到一做项目</tag>
      </tags>
  </entry>
  <entry>
    <title>未完成项目队列</title>
    <url>/2024/03/20/PythonProjects/%E6%9C%AA%E5%AE%8C%E6%88%90%E9%A1%B9%E7%9B%AE%E9%98%9F%E5%88%97/</url>
    <content><![CDATA[<ol>
<li>完成对前台ASIN的评论内容抓取. (如果可以, 并做词频分析)</li>
<li>联合补货表, 采购计划, 装箱单, 发票, 亚马逊装箱单, 自动化一条龙</li>
<li>对BA数据进行入库. 建立多个数据模型</li>
<li>监控多ASIN的广告位置和自然位置. (如果可以, 并做一整套数据表格展示)</li>
<li>监控多ASIN排名.</li>
</ol>
]]></content>
      <categories>
        <category>从零到一做项目</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>从零到一做项目</tag>
        <tag>待完成</tag>
      </tags>
  </entry>
  <entry>
    <title>数据容器-序列</title>
    <url>/2024/01/27/Python/%E5%BA%8F%E5%88%97/</url>
    <content><![CDATA[<h1 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h1><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 定义: 用于存储数据的容器. 格式以方括号[元素, 元素]包裹内部元素. 可以自我嵌套, 也可以嵌套其他数据容器.</span></span><br><span class="line"><span class="comment"># 语法定义: </span></span><br><span class="line">a = <span class="built_in">list</span>()</span><br><span class="line">a = []</span><br><span class="line">a = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br></pre></td></tr></table></figure>



<h2 id="列表的特性"><a href="#列表的特性" class="headerlink" title="列表的特性"></a>列表的特性</h2><p>1, 对变量的赋值实际上是对于数据内存地址的引用关联</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 当我们对变量b进行列表a的赋值操作的时候</span></span><br><span class="line">a = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line">b = a</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;a: <span class="subst">&#123;<span class="built_in">hex</span>(<span class="built_in">id</span>(a))&#125;</span>, b: <span class="subst">&#123;<span class="built_in">hex</span>(<span class="built_in">id</span>(b))&#125;</span>&quot;</span>)</span><br><span class="line"><span class="comment"># hex方法是对id方法结果进行十六进制转换</span></span><br></pre></td></tr></table></figure>

<p>输出结果为:</p>
<blockquote>
<p>a: 0x14d70a1d2c0, b: 0x14d70a1d2c0</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 因为a和b是相当于指针, 指向同一数据的内存地址, 因此在对b进行操作的时候.同时也会影响到a</span></span><br><span class="line">a = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line">b = a</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;a: <span class="subst">&#123;<span class="built_in">hex</span>(<span class="built_in">id</span>(a))&#125;</span>, b: <span class="subst">&#123;<span class="built_in">hex</span>(<span class="built_in">id</span>(b))&#125;</span>&quot;</span>)</span><br><span class="line">b.append(<span class="number">4</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;对b列表进行元素增加之后  a: <span class="subst">&#123;a&#125;</span>, b: <span class="subst">&#123;b&#125;</span>&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;内存地址  a: <span class="subst">&#123;<span class="built_in">hex</span>(<span class="built_in">id</span>(a))&#125;</span>, b: <span class="subst">&#123;<span class="built_in">hex</span>(<span class="built_in">id</span>(b))&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure>

<p>输出结果为:</p>
<blockquote>
<p>对b列表进行元素增加之后  a: [1, 2, 3, 4], b: [1, 2, 3, 4]</p>
<p>内存地址  a: 0x23b75e1d2c0, b: 0x23b75e1d2c0</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 拥有同样性质的列表操作方法全部如下</span></span><br><span class="line">a = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line">b = a</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;a: <span class="subst">&#123;<span class="built_in">hex</span>(<span class="built_in">id</span>(a))&#125;</span>,\t\t\t b: <span class="subst">&#123;<span class="built_in">hex</span>(<span class="built_in">id</span>(b))&#125;</span>&quot;</span>)</span><br><span class="line">b.append(<span class="number">4</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;a: <span class="subst">&#123;a&#125;</span>,\t\t\t b: <span class="subst">&#123;b&#125;</span>&quot;</span>)</span><br><span class="line">b.extend([<span class="number">5</span>, <span class="number">6</span>])</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;a: <span class="subst">&#123;a&#125;</span>,\t\t\t b: <span class="subst">&#123;b&#125;</span>&quot;</span>)</span><br><span class="line">b.insert(<span class="number">3</span>, <span class="number">100</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;a: <span class="subst">&#123;a&#125;</span>,\t\t\t b: <span class="subst">&#123;b&#125;</span>&quot;</span>)</span><br><span class="line">b.remove(<span class="number">100</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;a: <span class="subst">&#123;a&#125;</span>,\t\t\t b: <span class="subst">&#123;b&#125;</span>&quot;</span>)</span><br><span class="line">b.sort(reverse = <span class="literal">True</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;a: <span class="subst">&#123;a&#125;</span>,\t\t\t b: <span class="subst">&#123;b&#125;</span>&quot;</span>)</span><br><span class="line">b.pop()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;a: <span class="subst">&#123;a&#125;</span>,\t\t\t b: <span class="subst">&#123;b&#125;</span>&quot;</span>)</span><br><span class="line">b.clear()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;a: <span class="subst">&#123;a&#125;</span>,\t\t\t b: <span class="subst">&#123;b&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure>

<p>输出结果为:</p>
<blockquote>
<p>a: 0x23c51b5d2c0,			 b: 0x23c51b5d2c0<br>a: [1, 2, 3, 4],			 b: [1, 2, 3, 4]<br>a: [1, 2, 3, 4, 5, 6],			 b: [1, 2, 3, 4, 5, 6]<br>a: [1, 2, 3, 100, 4, 5, 6],			 b: [1, 2, 3, 100, 4, 5, 6]<br>a: [1, 2, 3, 4, 5, 6],			 b: [1, 2, 3, 4, 5, 6]<br>a: [6, 5, 4, 3, 2, 1],			 b: [6, 5, 4, 3, 2, 1]<br>a: [6, 5, 4, 3, 2],			 b: [6, 5, 4, 3, 2]<br>a: [],			 b: []</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 生成一个新的列表</span></span><br><span class="line">a = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line">b = a</span><br><span class="line">c = b.copy()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;a: <span class="subst">&#123;<span class="built_in">hex</span>(<span class="built_in">id</span>(a))&#125;</span>, b: <span class="subst">&#123;<span class="built_in">hex</span>(<span class="built_in">id</span>(b))&#125;</span>, c: <span class="subst">&#123;<span class="built_in">hex</span>(<span class="built_in">id</span>(c))&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure>

<p>输出结果为:</p>
<blockquote>
<p>a: 0x1d57ca5d2c0, b: 0x1d57ca5d2c0, c: 0x1d57cdc7040</p>
</blockquote>
<h1 id="列表的方式实现栈"><a href="#列表的方式实现栈" class="headerlink" title="列表的方式实现栈"></a>列表的方式实现栈</h1>]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>待补充</tag>
        <tag>序列</tag>
      </tags>
  </entry>
  <entry>
    <title>xlwings学习笔记</title>
    <url>/2024/03/28/xlwings/xlwings%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h2 id="通过赋值的方法将单元格范围转换成列表"><a href="#通过赋值的方法将单元格范围转换成列表" class="headerlink" title="通过赋值的方法将单元格范围转换成列表"></a>通过赋值的方法将单元格范围转换成列表</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> xlwings <span class="keyword">as</span> xw</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建到工作簿的链接</span></span><br><span class="line">wb1 = xw.Book(<span class="string">&quot;./练习文件/补货计划.xlsx&quot;</span>)</span><br><span class="line">wb2 = xw.Book(<span class="string">&quot;./练习文件/装箱单.xlsx&quot;</span>)</span><br><span class="line"><span class="comment"># 创建工作表对象</span></span><br><span class="line">wb1_sheet = wb1.sheets[<span class="string">&quot;Sheet1&quot;</span>]</span><br><span class="line">wb2_sheet = wb2.sheets[<span class="string">&quot;装箱单&quot;</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将表格数据录入到Pandas中</span></span><br><span class="line">range1 = wb1_sheet[<span class="string">&quot;A1&quot;</span>].expand(<span class="string">&quot;table&quot;</span>)</span><br><span class="line"><span class="comment"># 赋值方法将单元格范围转换成列表</span></span><br><span class="line">data_values = range1.value</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>待补充</tag>
        <tag>xlwings</tag>
      </tags>
  </entry>
</search>
